generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model auth_users {
  email    String @id @unique(map: "Auth_users_email_key") @db.VarChar(255)
  password String @db.VarChar(255)
  role     String
}

model buyer_payment_means {
  id       Int        @id @default(autoincrement())
  type     String     @db.VarChar(255)
  provider String     @db.VarChar(255)
  buyer_id String
  users    users      @relation(fields: [buyer_id], references: [id], onUpdate: NoAction, map: "buyer_payment_means_ibfk_1")
  payments payments[]

  @@index([buyer_id], map: "buyer_id")
}

model cart_items {
  id                Int             @id @default(autoincrement())
  quantity          Int
  created_at        DateTime        @default(now())
  seller_service_id Int
  price             Decimal         @db.Decimal(20, 5)
  order_id          Int
  seller_services   seller_services @relation(fields: [seller_service_id], references: [id], onUpdate: NoAction, map: "cart_items_ibfk_1")
  orders            orders          @relation(fields: [order_id], references: [id], onUpdate: NoAction, map: "cart_items_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([seller_service_id], map: "seller_service_id")
}

model categories {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(255)
  services services[]
}

model order_items {
  id                Int             @id @default(autoincrement())
  quantity          Int
  created_at        DateTime        @default(now())
  seller_service_id Int
  order_id          Int
  price             Decimal         @db.Decimal(20, 5)
  orders            orders          @relation(fields: [order_id], references: [id], onUpdate: NoAction, map: "order_items_ibfk_1")
  seller_services   seller_services @relation(fields: [seller_service_id], references: [id], onUpdate: NoAction, map: "order_items_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([seller_service_id], map: "seller_service_id")
}

model orders {
  id                                   Int           @id @default(autoincrement())
  gst                                  Decimal       @db.Decimal(20, 5)
  total                                Decimal       @db.Decimal(20, 5)
  created_at                           DateTime      @default(now())
  buyer_id                             String
  is_paid                              Int           @db.TinyInt
  payment_id                           Int?
  cart_items                           cart_items[]
  order_items                          order_items[]
  users                                users         @relation(fields: [buyer_id], references: [id], onUpdate: NoAction, map: "orders_ibfk_1")
  payments_orders_payment_idTopayments payments?     @relation("orders_payment_idTopayments", fields: [payment_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "orders_ibfk_2")
  payments_payments_order_idToorders   payments[]    @relation("payments_order_idToorders")

  @@index([buyer_id], map: "buyer_id")
  @@index([payment_id], map: "orders_ibfk_2")
}

model payments {
  id                                 Int                 @id @default(autoincrement())
  total                              Decimal             @db.Decimal(20, 5)
  createdAt                          DateTime            @default(now())
  order_id                           Int
  buyer_payment_means_id             Int
  orders_orders_payment_idTopayments orders[]            @relation("orders_payment_idTopayments")
  orders_payments_order_idToorders   orders              @relation("payments_order_idToorders", fields: [order_id], references: [id], onUpdate: NoAction, map: "payments_ibfk_1")
  buyer_payment_means                buyer_payment_means @relation(fields: [buyer_payment_means_id], references: [id], onUpdate: NoAction, map: "payments_ibfk_2")

  @@index([buyer_payment_means_id], map: "buyer_payment_means_id")
  @@index([order_id], map: "order_id")
}

model seller_services {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  desc        String        @db.VarChar(255)
  service_id  Int
  seller_id   String
  price       Decimal       @db.Decimal(20, 5)
  price_type  String        @db.VarChar(45)
  cart_items  cart_items[]
  order_items order_items[]
  services    services      @relation(fields: [service_id], references: [id], map: "Seller_services_service_id_fkey")
  users       users         @relation(fields: [seller_id], references: [id], onUpdate: NoAction)

  @@unique([service_id, name], map: "Seller_services_service_id_name_key")
  @@index([seller_id], map: "seller_services_seller_id_fkey")
}

model services {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  desc            String            @db.VarChar(255)
  category_id     Int
  seller_services seller_services[]
  categories      categories        @relation(fields: [category_id], references: [id], map: "Services_category_id_key")

  @@unique([category_id, name], map: "Services_category_id_name_key")
}

model users {
  id                  String                @id
  username            String                @db.VarChar(255)
  firstname           String                @db.VarChar(255)
  lastname            String                @db.VarChar(255)
  password            String                @db.VarChar(255)
  created_at          DateTime              @default(now())
  updated_at          DateTime
  email               String                @db.VarChar(255)
  mobile              Int
  postcode            Int
  is_seller           Boolean
  role                String                @default("user") @db.VarChar(255)
  address_line1       String                @db.VarChar(255)
  address_line2       String                @db.VarChar(255)
  city                String                @db.VarChar(255)
  country             String                @db.VarChar(255)
  buyer_payment_means buyer_payment_means[]
  orders              orders[]
  seller_services     seller_services[]
}
